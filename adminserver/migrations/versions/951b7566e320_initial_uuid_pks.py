"""initial uuid PKs

Revision ID: 951b7566e320
Revises: 
Create Date: 2025-09-24 15:00:00.036311

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '951b7566e320'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('modified_date', sa.DateTime(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_account')),
    sa.UniqueConstraint('id', name=op.f('uq_account_id')),
    sa.UniqueConstraint('name', name=op.f('uq_account_name'))
    )
    op.create_table('permission',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('modified_date', sa.DateTime(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('scope', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission')),
    sa.UniqueConstraint('id', name=op.f('uq_permission_id')),
    sa.UniqueConstraint('name', name=op.f('uq_permission_name'))
    )
    op.create_table('role',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('modified_date', sa.DateTime(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('id', name=op.f('uq_role_id')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('user',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('personal_name', sa.String(length=255), nullable=True),
    sa.Column('family_names', sa.String(length=255), nullable=True),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('modified_date', sa.DateTime(), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('id', name=op.f('uq_user_id')),
    sa.UniqueConstraint('name', name=op.f('uq_user_name'))
    )
    op.create_table('email',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('primary', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_email_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email')),
    sa.UniqueConstraint('email', name=op.f('uq_email_email')),
    sa.UniqueConstraint('id', name=op.f('uq_email_id'))
    )
    op.create_table('event',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_event_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event')),
    sa.UniqueConstraint('id', name=op.f('uq_event_id'))
    )
    op.create_table('grant',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('granted_date', sa.DateTime(), nullable=False),
    sa.Column('role_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('account_id', sa.String(length=36), nullable=True),
    sa.Column('revoked_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], name=op.f('fk_grant_account_id_account')),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_grant_role_id_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_grant_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_grant')),
    sa.UniqueConstraint('id', name=op.f('uq_grant_id'))
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name=op.f('fk_role_permission_permission_id_permission')),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_role_permission_role_id_role')),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_permission'))
    )
    op.create_table('user_invite',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('invited_by_user_id', sa.String(length=36), nullable=False),
    sa.Column('invite_date', sa.DateTime(), nullable=False),
    sa.Column('accepted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['invited_by_user_id'], ['user.id'], name=op.f('fk_user_invite_invited_by_user_id_user')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_invite_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_invite')),
    sa.UniqueConstraint('id', name=op.f('uq_user_invite_id')),
    sa.UniqueConstraint('token', name=op.f('uq_user_invite_token'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_invite')
    op.drop_table('role_permission')
    op.drop_table('grant')
    op.drop_table('event')
    op.drop_table('email')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('account')
    # ### end Alembic commands ###
