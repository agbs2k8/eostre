version: "3.9"

services:
  adminserver:
    build:
      context: ./adminserver
      dockerfile: Dockerfile
    container_name: adminserver
    env_file: ./adminserver/.env
    environment:
      KEYS_DIR: /app/keys
      PRIVATE_KEY_PATH: /app/keys/private_key.pem
      PUBLIC_KEY_PATH: /app/keys/public_key.pem
    volumes:
      - ./keys:/app/keys:ro
      - ./adminserver:/app   # dev only
    ports:
      - "5000:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  locationserv:
    build:
      context: ./locationserv
      dockerfile: Dockerfile
    container_name: locationserv
    env_file: ./locationserv/.env
    environment:
      KEYS_DIR: /app/keys
      PUBLIC_KEY_PATH: /app/keys/public_key.pem
    volumes:
      - ./keys:/app/keys:ro
      - ./locationserv:/app   # dev only
    depends_on:
      - mongo
    ports:
      - "8001:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/liveness"]
      interval: 30s
      timeout: 5s
      retries: 3

  eostre_ui:
    build:
      context: ./eostre_ui
      dockerfile: Dockerfile
    container_name: eostre_ui
    env_file: ./eostre_ui/.env
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_ADMIN_API: http://localhost:5000
      NEXT_PUBLIC_LOCATION_API: http://localhost:8001
      ADMIN_API_INTERNAL: http://adminserver:8080
      LOCATION_API_INTERNAL: http://locationserv:8000
    volumes:
      - ./eostre_ui:/app
      - /app/node_modules
    depends_on:
      - adminserver
      - locationserv
    ports:
      - "3000:3000"
    restart: unless-stopped

  mongo:
    image: mongo:7.0
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--username=root", "--password=example", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  mongo_data: